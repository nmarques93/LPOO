
package maze.logic;

import java.util.Scanner;
import java.util.Arrays;
import java.util.Random;

public class Maze {
	
	
	protected char [][] layout=new char[10][10];
	protected Hero luke=new Hero();
	protected Dragon smaug=new Dragon();
	protected Sword excalibur=new Sword();
	
	protected boolean ended=false;
	
	/*
	 * construtor que usa uma matriz fornecida pelo user
	 */
	public Maze(char[][] lo){
		this.layout=lo;
		
		//faz o scan do labirinto e atribui a posicao dos simbolos as classes respetivas
		for (int i = 0; i < layout.length; i++) {
		    for (int j = 0; j < this.layout[0].length; j++){
		    	switch(layout[i][j]){
		    		case 'H':
		    			luke.getPos().move(i, j);
		    			break;
		    		case 'D':
		    			smaug.getPos().move(i, j);
		    			break;
		    		case 'S':
		    			excalibur.getPos().move(i, j);
		    			break;
		    	}
		    }
		}
	}
	
	/*
	 * Construtor que gera aleatoriamente uma matriz
	 * TODO: Implementar tipo de dragao (enum)
	 */
	public Maze(int dimensao, int numDragoes, TipoDragao type){
		char[][] lab=new char[dimensao][dimensao];
		char[][] visitedCells=new char[(dimensao-1)/2][(dimensao-1)/2];
		Arrays.fill(lab, 'X');
		
		
	}
	
	public boolean getEnded(){
		return this.ended;
	}
	
	public void setEnded(boolean x){
		this.ended=x;
	}
	
	public char getSymbol(int x, int y){
		return this.layout[x][y];
	}
	
	public void setSymbol(int x, int y, char s){
		this.layout[x][y]=s;
	}
	
	public char[][] getLayout(){
		return this.layout;
	}
	
	public void printMaze(Hero luke, Dragon smaug, Sword excalibur){
		
		this.layout[excalibur.getPos().getX()][excalibur.getPos().getY()]=excalibur.getSymbol();
		this.layout[smaug.getPos().getX()][smaug.getPos().getY()]=smaug.getSymbol();
		this.layout[luke.getPos().getX()][luke.getPos().getY()]=luke.getSymbol();
		
		for (int i = 0; i < 10; i++) {
		    for (int j = 0; j < this.layout[0].length; j++) {
		        System.out.print(layout[i][j]+ " ");
		    }
		    System.out.print('\n');
		}
		
		
	}
	
	public void printField(){
		for (int i = 0; i < 10; i++) {
		    for (int j = 0; j < this.layout[0].length; j++) {
		    	if(this.layout[i][j]=='H' || this.layout[i][j]=='D' || this.layout[i][j]=='E')
		    		this.layout[i][j]=' ';
		        System.out.print(this.layout[i][j] + ' ');
		    }
		    System.out.print('\n');
		}
	}
	
	
}